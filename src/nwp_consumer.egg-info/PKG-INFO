Metadata-Version: 2.1
Name: nwp-consumer
Version: 0.0.1
Summary: Tool for aggregating raw NWP files into .zarr files
Author-email: Sol Cotton <sol@openclimatefix.org>
License: MIT License
Project-URL: repository, https://github.com/openclimatefix/nwp-consumer
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.12.0
Description-Content-Type: text/markdown
Requires-Dist: cfgrib>=0.9.10.4
Requires-Dist: joblib>=1.4.2
Requires-Dist: numpy>=1.23.2
Requires-Dist: ocf-blosc2>=0.0.3
Requires-Dist: psutil>=5.9.6
Requires-Dist: returns>=0.23.0
Requires-Dist: requests>=2.31.0
Requires-Dist: xarray>=2023.11.0
Requires-Dist: zarr>=2.16.1
Provides-Extra: test
Requires-Dist: botocore==1.33.7; extra == "test"
Requires-Dist: flask==3.0.0; extra == "test"
Requires-Dist: flask-cors==4.0.0; extra == "test"
Requires-Dist: moto[s3,server]==4.2.11; extra == "test"
Requires-Dist: unittest-xml-reporting==3.2.0; extra == "test"
Provides-Extra: lint
Requires-Dist: mypy>=1.10.1; extra == "lint"
Requires-Dist: ruff>=0.6.0; extra == "lint"
Provides-Extra: dev
Requires-Dist: nwp-consumer[lint,test]; extra == "dev"
Requires-Dist: pydoctor>=24.3.0; extra == "dev"

<h2 align="center">
NWP CONSUMER
<br>
<br>
Microservice for consuming NWP data.
</h2>

<div align="center">

<a href="https://github.com/openclimatefix/nwp-consumer/graphs/contributors" alt="Contributors">
    <img src="https://img.shields.io/github/contributors/openclimatefix/nwp-consumer?style=for-the-badge&color=FFFFFF" /></a>
<a href="https://github.com/openclimatefix/nwp-consumer/actions/workflows/ci.yml" alt="Workflows">
    <img alt="GitHub Workflow Status (with branch)" src="https://img.shields.io/github/actions/workflow/status/openclimatefix/nwp-consumer/ci.yml?branch=main&style=for-the-badge&color=FFD053"></a>
<a href="https://github.com/openclimatefix/nwp-consumer/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc" alt="Issues">
    <img src="https://img.shields.io/github/issues/openclimatefix/nwp-consumer?style=for-the-badge&color=FFAC5F"></a>
<a href="https://github.com/openclimatefix/nwp-consumer/tags" alt="Tags">
    <img alt="GitHub tag (latest SemVer pre-release)" src="https://img.shields.io/github/v/tag/openclimatefix/nwp-consumer?include_prereleases&sort=semver&style=for-the-badge&color=7BCDF3"></a>
<a href="https://pypi.org/project/nwp-consumer" alt="PyPI">
    <img alt="PyPI version" src="https://img.shields.io/pypi/v/nwp-consumer?&style=for-the-badge&color=086788"></a>
</div>

<br>

A microservice for multi-source consumption of NWP data, storing it in a common format. Built with inspiration 
from the [Hexagonal Architecture](https://alistair.cockburn.us/hexagonal-architecture) pattern.

## Documentation

Documentation is generated via `pydoctor`[https://pydoctor.readthedocs.io/en/latest/]. To build the documentation,
run the following command in the repository root:

```bash
$ python -m pydoctor
```


## Further reading

On packaging a python project using setuptools and pyproject.toml:
- The official [PyPA packaging guide](https://packaging.python.org/en/latest/tutorials/packaging-projects/).
- A [step-by-step practical guide](https://godatadriven.com/blog/a-practical-guide-to-setuptools-and-pyproject-toml/)
on the *godatadriven* blog.
- The pyproject.toml
[metadata specification](https://packaging.python.org/en/latest/specifications/declaring-project-metadata).

On hexagonal architecture:
- A [concrete example](https://medium.com/towards-data-engineering/a-concrete-example-of-the-hexagonal-architecture-in-python-d821213c6fb9)
using Python.
- An [overview of the fundamentals](https://medium.com/ssense-tech/hexagonal-architecture-there-are-always-two-sides-to-every-story-bc0780ed7d9c) 
incorporating Typescript 
- Another [example](https://medium.com/@matiasvarela/hexagonal-architecture-in-go-cfd4e436faa3) using Go.

On the directory structure:
- The official [PyPA discussion](https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout/) on 
src and flat layouts.


---

## Contributing and community

- See the [OCF Organisation Repo](https://github.com/openclimatefix) for details on contributing.
- Find out more about OCF in the [Meta Repo](https://github.com/openclimatefix/ocf-meta-repo).
- Follow OCF on [Twitter](https://twitter.com/OpenClimateFix).
- Check out the OCF blog at https://openclimatefix.org/blog for updates.
