name: Python CI

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  test:
    # Run unittests on all branches and PRs
    runs-on: ubuntu-latest
    container: continuumio/miniconda3:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          conda install -y -c conda-forge nodejs eccodes cartopy cf-units cftime numcodecs
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install coverage

      - name: Run unit tests
        run: coverage run -m unittest discover -s src/nwp-consumer -p "test_*.py"

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2

      - name: Run integration tests
        # Run integration tests on main and PRs to it
        env:
          RAW_DIR: "/tmp/raw"
          ZARR_DIR: "/tmp/zarr"
        if:  github.ref == 'refs/heads/main' && github.event_name != 'tag'
        run: unittest discover -s src/test_integration -p "test_*.py"
          
  build-docker:
    # Only build Docker image on main branch commits and if unittests pass
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: Containerfile
          push: ${{ github.event_name }} != 'pull_request'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          
  build-wheel:
    # Only build wheel on main branch commits and if unittests pass
    runs-on: ubuntu-latest
    container: continuumio/miniconda3:latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build wheel
        run: |
          conda install -y -c conda-forge nodejs eccodes cartopy cf-units cftime numcodecs
          python -m pip install --upgrade pip
          pip install .
          python -m build --wheel

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheel
          path: dist/*.whl