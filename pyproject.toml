# --- PROJECT CONFIGURATION --- #

[build-system]
requires = ["setuptools>=67", "wheel", "setuptools_scm>=3.4", "setuptools-git-versioning>=1.13.3"]
build-backend = "setuptools.build_meta"

# Metadata (see https://peps.python.org/pep-0621/)
[project]
name = "nwp-consumer"
dynamic = ["version"] # Set automtically using git: https://setuptools-git-versioning.readthedocs.io/en/stable/
description = "Tool for aggregating NWP .grib files into .zarrs"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.12.0"
license = {text = "MIT License"}
authors = [
    { name = "Sol Cotton", email = "sol@openclimatefix.org"}
]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    "cfgrib == 0.9.10.4",
    "dask[distributed] == 2023.12.0",
    "docopt == 0.6.2",
    "ecmwf-api-client == 1.6.3",
    "fsspec[s3] == 2023.12.1",
    "huggingface-hub == 0.19.4",
    "marshmallow == 3.20.1",
    "marshmallow-dataclass == 8.6.0",
    "numpy == 1.26.2",
    "ocf-blosc2 == 0.0.3",
    "pathlib == 1.0.1",
    "psutil == 5.9.6",
    "pyproj == 3.6.1",
    "requests == 2.31.0",
    "structlog == 23.2.0",
    "urllib3 == 2.0.0",
    "xarray == 2023.11.0",
    "zarr == 2.16.1"
]

[project.optional-dependencies]
dev = [
    "botocore == 1.33.7",  # Required for moto, prevents installing the whole of boto3
    "flask == 3.0.0",
    "flask-cors == 4.0.0",
    "moto[s3,server] == 4.2.11",
    "mypy == 1.7.1",
    "python-lsp-server == 1.9.0",
    "ruff == 0.1.7",
    "unittest-xml-reporting == 3.2.0",
]

[project.scripts]
nwp-consumer = "nwp_consumer.cmd.main:main" # Set the entrypoint for the CLI

[project.urls]
repository = "https://github.com/openclimatefix/nwp-consumer"

[tool.setuptools-git-versioning]
enabled = true

# --- LINTING AND TYPING CONFIGURATION --- #

# MyPy configuration
# * See https://mypy.readthedocs.io/en/stable/index.html
[tool.mypy]
python_version = "3.12"
warn_return_any = true
disallow_untyped_defs = true
plugins = [
    'numpy.typing.mypy_plugin'
]

# Ruff configuration
# * See https://beta.ruff.rs/docs/
[tool.ruff]
select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "W",   # whitespace and newlines
    "I",   # isort
    "UP",  # modernize
    "ANN", # flake8 type annotations
    "S",   # flake8 bandit
    "B",   # flake8 bugbear
    "C4",  # flake8 comprehensions
    "COM", # flake8 commas
    "T20", # flake8 print
    "SIM", # flake8 simplify
    "ARG", # flake8 unused arguments
    "DTZ", # flake8 datetimes
    "Q",   # flake8 quotes
    "TCH", # flake8 typecheck
    "D",   # pydocstyle
    "RUF", # ruff-specific rules
]
line-length = 100
indent-width = 4
# Use pydocstyle Google convention
# See https://www.pydocstyle.org/en/stable/error_codes.html
ignore = [
    "D203", "D213", "D215", "D400", "D401", "D404", "D406",
    "D407", "D408", "D409", "D413",
    "ANN101",
]
exclude = ["__init__.py"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.per-file-ignores]
"test*" = ["D", "ANN"]
